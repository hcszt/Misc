<phyphox version="1.14" locale="en">
  <title>Submit to MPTL sensor database</title>
  <category>phyphox.org</category>
  <color>white</color>
  <icon format="base64">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</icon>
  <description>Submit information about the sensors in your phone to phyphox.org.

This experiment will collect technical data about your phone and your sensors, which you can submit to our sensor data base. The data will be aggregated and made available to other users to help us and others to learn about the availability and capability of sensors across different devices.</description>
  <data-containers>
    <container size="1" init="0">state</container>
    <container size="1" init="0">startState</container>
    <container size="1" init="0">endState</container>
    <container size="1" init="0">validCount</container>
    <container size="1">validCount+1</container>
    <container size="1" init="0">isResult</container>
    <container size="1" init="0">activeSensor</container>
    <container size="1" init="0">stdLimit</container>
    <container size="1" init="0">newRate</container>
    <container size="1" init="0">newAvg</container>
    <container size="1" init="0">newStd</container>
    <container size="1" init="0">count</container>
    <container size="1" init="0">tmax</container>
    <container size="1" init="0">tmin</container>
    <container size="100">acc</container>
    <container size="100">acct</container>
    <container size="1">accelerometerRate</container>
    <container size="1">accelerometerAvg</container>
    <container size="1">accelerometerStd</container>
    <container size="100">lin</container>
    <container size="100">lint</container>
    <container size="1">linear_accelerationRate</container>
    <container size="1">linear_accelerationAvg</container>
    <container size="1">linear_accelerationStd</container>
    <container size="100">gyr</container>
    <container size="100">gyrt</container>
    <container size="1">gyroscopeRate</container>
    <container size="1">gyroscopeAvg</container>
    <container size="1">gyroscopeStd</container>
    <container size="100">mag</container>
    <container size="100">magt</container>
    <container size="1">magnetic_fieldRate</container>
    <container size="1">magnetic_fieldAvg</container>
    <container size="1">magnetic_fieldStd</container>
    <container size="100">pre</container>
    <container size="100">pret</container>
    <container size="1">pressureRate</container>
    <container size="1">pressureAvg</container>
    <container size="1">pressureStd</container>
    <container size="100">tem</container>
    <container size="100">temt</container>
    <container size="1">temperatureRate</container>
    <container size="1">temperatureAvg</container>
    <container size="1">temperatureStd</container>
    <container size="100">hum</container>
    <container size="100">humt</container>
    <container size="1">humidityRate</container>
    <container size="1">humidityAvg</container>
    <container size="1">humidityStd</container>
    <container size="100">lig</container>
    <container size="100">ligt</container>
    <container size="1">lightRate</container>
    <container size="1">lightAvg</container>
    <container size="1">lightStd</container>
    <container size="100">pro</container>
    <container size="100">prot</container>
    <container size="1">proximityRate</container>
    <container size="1">proximityAvg</container>
    <container size="1">proximityStd</container>
  </data-containers>
  <network>
    <connection address="https://phyphox.org/sensordb/mptl/submit.php" autoConnect="true" service="http/post" id="submit" privacy="https://phyphox.org/disclaimer/" conversion="json">
      <send id="surveyState" type="buffer">state</send>
      <send id="id" type="meta">uniqueID</send>
      <send id="version" type="meta">version</send>
      <send id="build" type="meta">build</send>
      <send id="fileFormat" type="meta">fileFormat</send>
      <send id="deviceModel" type="meta">deviceModel</send>
      <send id="deviceBrand" type="meta">deviceBrand</send>
      <send id="deviceBoard" type="meta">deviceBoard</send>
      <send id="deviceManufacturer" type="meta">deviceManufacturer</send>
      <send id="deviceBaseOS" type="meta">deviceBaseOS</send>
      <send id="deviceCodename" type="meta">deviceCodename</send>
      <send id="deviceRelease" type="meta">deviceRelease</send>
      <send id="accelerometerName" type="meta">accelerometerName</send>
      <send id="accelerometerVendor" type="meta">accelerometerVendor</send>
      <send id="accelerometerRange" type="meta">accelerometerRange</send>
      <send id="accelerometerResolution" type="meta">accelerometerResolution</send>
      <send id="accelerometerMinDelay" type="meta">accelerometerMinDelay</send>
      <send id="accelerometerMaxDelay" type="meta">accelerometerMaxDelay</send>
      <send id="accelerometerPower" type="meta">accelerometerPower</send>
      <send id="accelerometerVersion" type="meta">accelerometerVersion</send>
      <send id="accelerometerRate" type="buffer">accelerometerRate</send>
      <send id="accelerometerAvg" type="buffer">accelerometerAvg</send>
      <send id="accelerometerStd" type="buffer" init="1000000">accelerometerStd</send>
      <send id="linear_accelerationName" type="meta">linear_accelerationName</send>
      <send id="linear_accelerationVendor" type="meta">linear_accelerationVendor</send>
      <send id="linear_accelerationRange" type="meta">linear_accelerationRange</send>
      <send id="linear_accelerationResolution" type="meta">linear_accelerationResolution</send>
      <send id="linear_accelerationMinDelay" type="meta">linear_accelerationMinDelay</send>
      <send id="linear_accelerationMaxDelay" type="meta">linear_accelerationMaxDelay</send>
      <send id="linear_accelerationPower" type="meta">linear_accelerationPower</send>
      <send id="linear_accelerationVersion" type="meta">linear_accelerationVersion</send>
      <send id="linear_accelerationRate" type="buffer">linear_accelerationRate</send>
      <send id="linear_accelerationAvg" type="buffer">linear_accelerationAvg</send>
      <send id="linear_accelerationStd" type="buffer">linear_accelerationStd</send>
      <send id="gyroscopeName" type="meta">gyroscopeName</send>
      <send id="gyroscopeVendor" type="meta">gyroscopeVendor</send>
      <send id="gyroscopeRange" type="meta">gyroscopeRange</send>
      <send id="gyroscopeResolution" type="meta">gyroscopeResolution</send>
      <send id="gyroscopeMinDelay" type="meta">gyroscopeMinDelay</send>
      <send id="gyroscopeMaxDelay" type="meta">gyroscopeMaxDelay</send>
      <send id="gyroscopePower" type="meta">gyroscopePower</send>
      <send id="gyroscopeVersion" type="meta">gyroscopeVersion</send>
      <send id="gyroscopeRate" type="buffer">gyroscopeRate</send>
      <send id="gyroscopeAvg" type="buffer">gyroscopeAvg</send>
      <send id="gyroscopeStd" type="buffer">gyroscopeStd</send>
      <send id="magnetic_fieldName" type="meta">magnetic_fieldName</send>
      <send id="magnetic_fieldVendor" type="meta">magnetic_fieldVendor</send>
      <send id="magnetic_fieldRange" type="meta">magnetic_fieldRange</send>
      <send id="magnetic_fieldResolution" type="meta">magnetic_fieldResolution</send>
      <send id="magnetic_fieldMinDelay" type="meta">magnetic_fieldMinDelay</send>
      <send id="magnetic_fieldMaxDelay" type="meta">magnetic_fieldMaxDelay</send>
      <send id="magnetic_fieldPower" type="meta">magnetic_fieldPower</send>
      <send id="magnetic_fieldVersion" type="meta">magnetic_fieldVersion</send>
      <send id="magnetic_fieldRate" type="buffer">magnetic_fieldRate</send>
      <send id="magnetic_fieldAvg" type="buffer">magnetic_fieldAvg</send>
      <send id="magnetic_fieldStd" type="buffer">magnetic_fieldStd</send>
      <send id="pressureName" type="meta">pressureName</send>
      <send id="pressureVendor" type="meta">pressureVendor</send>
      <send id="pressureRange" type="meta">pressureRange</send>
      <send id="pressureResolution" type="meta">pressureResolution</send>
      <send id="pressureMinDelay" type="meta">pressureMinDelay</send>
      <send id="pressureMaxDelay" type="meta">pressureMaxDelay</send>
      <send id="pressurePower" type="meta">pressurePower</send>
      <send id="pressureVersion" type="meta">pressureVersion</send>
      <send id="pressureRate" type="buffer">pressureRate</send>
      <send id="pressureAvg" type="buffer">pressureAvg</send>
      <send id="pressureStd" type="buffer">pressureStd</send>
      <send id="temperatureName" type="meta">temperatureName</send>
      <send id="temperatureVendor" type="meta">temperatureVendor</send>
      <send id="temperatureRange" type="meta">temperatureRange</send>
      <send id="temperatureResolution" type="meta">temperatureResolution</send>
      <send id="temperatureMinDelay" type="meta">temperatureMinDelay</send>
      <send id="temperatureMaxDelay" type="meta">temperatureMaxDelay</send>
      <send id="temperaturePower" type="meta">temperaturePower</send>
      <send id="temperatureVersion" type="meta">temperatureVersion</send>
      <send id="temperatureRate" type="buffer">temperatureRate</send>
      <send id="temperatureAvg" type="buffer">temperatureAvg</send>
      <send id="temperatureStd" type="buffer">temperatureStd</send>
      <send id="humidityName" type="meta">humidityName</send>
      <send id="humidityVendor" type="meta">humidityVendor</send>
      <send id="humidityRange" type="meta">humidityRange</send>
      <send id="humidityResolution" type="meta">humidityResolution</send>
      <send id="humidityMinDelay" type="meta">humidityMinDelay</send>
      <send id="humidityMaxDelay" type="meta">humidityMaxDelay</send>
      <send id="humidityPower" type="meta">humidityPower</send>
      <send id="humidityVersion" type="meta">humidityVersion</send>
      <send id="humidityRate" type="buffer">humidityRate</send>
      <send id="humidityAvg" type="buffer">humidityAvg</send>
      <send id="humidityStd" type="buffer">humidityStd</send>
      <send id="lightName" type="meta">lightName</send>
      <send id="lightVendor" type="meta">lightVendor</send>
      <send id="lightRange" type="meta">lightRange</send>
      <send id="lightResolution" type="meta">lightResolution</send>
      <send id="lightMinDelay" type="meta">lightMinDelay</send>
      <send id="lightMaxDelay" type="meta">lightMaxDelay</send>
      <send id="lightPower" type="meta">lightPower</send>
      <send id="lightVersion" type="meta">lightVersion</send>
      <send id="lightRate" type="buffer">lightRate</send>
      <send id="lightAvg" type="buffer">lightAvg</send>
      <send id="lightStd" type="buffer">lightStd</send>
      <send id="proximityName" type="meta">proximityName</send>
      <send id="proximityVendor" type="meta">proximityVendor</send>
      <send id="proximityRange" type="meta">proximityRange</send>
      <send id="proximityResolution" type="meta">proximityResolution</send>
      <send id="proximityMinDelay" type="meta">proximityMinDelay</send>
      <send id="proximityMaxDelay" type="meta">proximityMaxDelay</send>
      <send id="proximityPower" type="meta">proximityPower</send>
      <send id="proximityVersion" type="meta">proximityVersion</send>
      <send id="proximityRate" type="buffer">proximityRate</send>
      <send id="proximityAvg" type="buffer">proximityAvg</send>
      <send id="proximityStd" type="buffer">proximityStd</send>
      <send id="depthFrontSensor" type="meta">depthFrontSensor</send>
      <send id="depthFrontResolution" type="meta">depthFrontResolution</send>
      <send id="depthFrontRate" type="meta">depthFrontRate</send>
      <send id="depthBackSensor" type="meta">depthBackSensor</send>
      <send id="depthBackResolution" type="meta">depthBackResolution</send>
      <send id="depthBackRate" type="meta">depthBackRate</send>
      <receive id="result">state</receive>
    </connection>
  </network>
  <input>
    <sensor type="accelerometer" ignoreUnavailable="true">
      <output component="abs">acc</output>
      <output component="t">acct</output>
    </sensor>
    <sensor type="linear_acceleration" ignoreUnavailable="true">
      <output component="abs">lin</output>
      <output component="t">lint</output>
    </sensor>
    <sensor type="gyroscope" ignoreUnavailable="true">
      <output component="abs">gyr</output>
      <output component="t">gyrt</output>
    </sensor>
    <sensor type="magnetic_field" ignoreUnavailable="true">
      <output component="abs">mag</output>
      <output component="t">magt</output>
    </sensor>
    <sensor type="pressure" ignoreUnavailable="true">
      <output component="x">pre</output>
      <output component="t">pret</output>
    </sensor>
    <sensor type="temperature" ignoreUnavailable="true">
      <output component="x">tem</output>
      <output component="t">temt</output>
    </sensor>
    <sensor type="humidity" ignoreUnavailable="true">
      <output component="x">hum</output>
      <output component="t">humt</output>
    </sensor>
    <sensor type="light" ignoreUnavailable="true">
      <output component="x">lig</output>
      <output component="t">ligt</output>
    </sensor>
    <sensor type="proximity" ignoreUnavailable="true">
      <output component="x">pro</output>
      <output component="t">prot</output>
    </sensor>
  </input>
  <analysis sleep="2">
    <!-- Check if the experiment has started -->
    <count>
      <input clear="false">acc</input>
      <output>count</output>
    </count>
    <if equal="true" greater="true">
      <input clear="false">count</input>
      <input type="value">100</input>
      <input type="value">1</input>
      <input type="value">0</input>
      <output>startState</output>
    </if>
    <if greater="true">
      <input clear="false">state</input>
      <input type="value">0</input>
      <input type="value">0</input>
      <output clear="false">startState</output>
    </if>
    <if equal="true">
      <input clear="false">startState</input>
      <input type="value">1</input>
      <input type="value">1</input>
      <output clear="false">state</output>
    </if>
    <!-- Accelerometer (calculate first as it is used to estimate whether the phone is resting -->
    <average>
      <input clear="false">acc</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">acct</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">acct</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">acc</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <!-- Check stddev to decide whether these are good values -->
    <if equal="true">
      <input clear="false">startState</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">accelerometerStd</output>
    </if>
    <multiply>
      <input clear="false">accelerometerStd</input>
      <input type="value">2</input>
      <output>stdLimit</output>
    </multiply>
    <if equal="true">
      <input clear="false">startState</input>
      <input type="value">1</input>
      <input clear="false">stdLimit</input>
      <output clear="false">accelerometerStd</output>
    </if>
    <add>
      <input clear="false">validCount</input>
      <input type="value">1</input>
      <output>validCount+1</output>
    </add>
    <if less="true">
      <input clear="false">newStd</input>
      <input clear="false">stdLimit</input>
      <input clear="false">validCount+1</input>
      <output clear="false">validCount</output>
    </if>
    <if less="true">
      <input clear="false">newStd</input>
      <input clear="false">accelerometerStd</input>
      <input type="value">0</input>
      <output clear="false">validCount</output>
    </if>
    <if less="true">
      <input clear="false">newStd</input>
      <input clear="false">accelerometerStd</input>
      <input type="value">1</input>
      <input type="value">0</input>
      <output clear="false">isResult</output>
    </if>
    <if less="true" greater="true">
      <!-- If we have not yet started, if we already are ready to submit or if we have already submitted, we never use a new result. -->
      <input clear="false">state</input>
      <input type="value">1</input>
      <input type="value">0</input>
      <output clear="false">isResult</output>
    </if>
    <!-- Accelerometer -->
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">accelerometerRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">accelerometerAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">accelerometerStd</output>
    </if>
    <!-- Linear acceleration -->
    <average>
      <input clear="false">lin</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">lint</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">lint</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">lin</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">linear_accelerationRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">linear_accelerationAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">linear_accelerationStd</output>
    </if>
    <!-- Gyroscope -->
    <average>
      <input clear="false">gyr</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">gyrt</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">gyrt</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">gyr</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">gyroscopeRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">gyroscopeAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">gyroscopeStd</output>
    </if>
    <!-- Magnetic field -->
    <average>
      <input clear="false">mag</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">magt</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">magt</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">mag</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">magnetic_fieldRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">magnetic_fieldAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">magnetic_fieldStd</output>
    </if>
    <!-- Pressure -->
    <average>
      <input clear="false">pre</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">pret</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">pret</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">pre</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">pressureRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">pressureAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">pressureStd</output>
    </if>
    <!-- Temperature -->
    <average>
      <input clear="false">tem</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">temt</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">temt</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">tem</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">temperatureRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">temperatureAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">temperatureStd</output>
    </if>
    <!-- Humidity -->
    <average>
      <input clear="false">hum</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">humt</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">humt</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">hum</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">humidityRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">humidityAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">humidityStd</output>
    </if>
    <!-- Light -->
    <average>
      <input clear="false">lig</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">ligt</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">ligt</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">lig</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">lightRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">lightAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">lightStd</output>
    </if>
    <!-- Proximity -->
    <average>
      <input clear="false">pro</input>
      <output as="average">newAvg</output>
      <output as="stddev">newStd</output>
    </average>
    <max>
      <input as="y" clear="false">prot</input>
      <output as="max">tmax</output>
    </max>
    <min>
      <input as="y" clear="false">prot</input>
      <output as="min">tmin</output>
    </min>
    <count>
      <input clear="false">pro</input>
      <output>count</output>
    </count>
    <formula formula="([1]-1)/([3]-[2])">
      <input clear="false">count</input>
      <input clear="false">tmin</input>
      <input clear="false">tmax</input>
      <output>newRate</output>
    </formula>
    <if greater="true">
      <input clear="false">count</input>
      <input type="value">0</input>
      <input clear="false">isResult</input>
      <input type="value">0</input>
      <output clear="false">activeSensor</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newRate</input>
      <output clear="false">proximityRate</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newAvg</input>
      <output clear="false">proximityAvg</output>
    </if>
    <if equal="true">
      <input clear="false">activeSensor</input>
      <input type="value">1</input>
      <input clear="false">newStd</input>
      <output clear="false">proximityStd</output>
    </if>
    <!-- If we had five results for the standard deviation since the last minimum stddev that are no more than 20% above the best one, the best one is our result as it is supposedly one with a resting phone. -->
    <if equal="true" greater="true">
      <input clear="false">validCount</input>
      <input type="value">5</input>
      <input type="value">1</input>
      <input type="value">0</input>
      <output clear="false">endState</output>
    </if>
    <if greater="true">
      <input clear="false">state</input>
      <input type="value">1</input>
      <input type="value">0</input>
      <output clear="false">endState</output>
    </if>
    <if equal="true">
      <input clear="false">endState</input>
      <input type="value">1</input>
      <input type="value">2</input>
      <output clear="false">state</output>
    </if>
  </analysis>
  <views>
    <view label="Submit">
      <info label="This experiment will collect technical data about your phone and your sensors, which you can submit to our sensor data base. The data will be aggregated and made available to other users to help us and others to learn about the availability and capability of sensors across different devices."/>
      <separator height="1"/>
      <info label="Please place your phone on a stable surface and press start. Avoid doing this while moving (car, train, etc) or on a vibrating surface (loud music, vibrations from vehicles, etc.) as this will distort the results."/>
      <separator height="1"/>
      <info label="Phyphox will collect data for a moment and eventually tell you to submit the data."/>
      <separator height="1"/>
      <value label="Step">
        <input>state</input>
        <map max="0">Waiting for start</map>
        <map max="1">Collecting data</map>
        <map max="2">You may now press submit</map>
        <map max="3">Success. Thank you!</map>
      </value>
      <value label="Confidence" precision="0">
        <input>validCount</input>
        <map max="0">0%</map>
        <map max="1">20%</map>
        <map max="2">40%</map>
        <map max="3">60%</map>
        <map max="4">80%</map>
        <map min="5">100%</map>
      </value>
      <button label="Submit">
        <trigger>submit</trigger>
      </button>
    </view>
    <view label="Results">
      <info label="Accelerometer" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>accelerometerRate</input>
      </value>
      <value label="Average" unit="[[unit_short_meter_per_square_second]]" precision="3">
        <input>accelerometerAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_meter_per_square_second]]" precision="3">
        <input>accelerometerStd</input>
      </value>
      <separator height="1"/>
      <info label="Acceleration (without g)" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>linear_accelerationRate</input>
      </value>
      <value label="Average" unit="[[unit_short_meter_per_square_second]]" precision="3">
        <input>linear_accelerationAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_meter_per_square_second]]" precision="3">
        <input>linear_accelerationStd</input>
      </value>
      <separator height="1"/>
      <info label="Gyroscope" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>gyroscopeRate</input>
      </value>
      <value label="Average" unit="[[unit_short_radian_per_second]]" precision="4">
        <input>gyroscopeAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_radian_per_second]]" precision="4">
        <input>gyroscopeStd</input>
      </value>
      <separator height="1"/>
      <info label="Magnetometer" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>magnetic_fieldRate</input>
      </value>
      <value label="Average" unit="[[unit_short_micro_tesla]]" precision="2">
        <input>magnetic_fieldAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_micro_tesla]]" precision="2">
        <input>magnetic_fieldStd</input>
      </value>
      <separator height="1"/>
      <info label="Barometer" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>pressureRate</input>
      </value>
      <value label="Average" unit="[[unit_short_hecto_pascal]]" precision="2">
        <input>pressureAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_hecto_pascal]]" precision="2">
        <input>pressureStd</input>
      </value>
      <separator height="1"/>
      <info label="Temperature" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>temperatureRate</input>
      </value>
      <value label="Average" unit="[[unit_short_degree_celsius]]" precision="2">
        <input>temperatureAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_degree_celsius]]" precision="2">
        <input>temperatureStd</input>
      </value>
      <separator height="1"/>
      <info label="Humidity" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>humidityRate</input>
      </value>
      <value label="Average" unit="[[unit_short_percent]]" precision="2">
        <input>humidityAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_percent]]" precision="2">
        <input>humidityStd</input>
      </value>
      <separator height="1"/>
      <info label="Light" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>lightRate</input>
      </value>
      <value label="Average" unit="[[unit_short_lux]]" precision="1">
        <input>lightAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_lux]]" precision="1">
        <input>lightStd</input>
      </value>
      <separator height="1"/>
      <info label="Proximity" align="center" bold="true" size="1.5"/>
      <value label="Rate" unit="[[unit_short_hertz]]" precision="1">
        <input>proximityRate</input>
      </value>
      <value label="Average" unit="[[unit_short_centi_meter]]" precision="0">
        <input>proximityAvg</input>
      </value>
      <value label="Standard deviation" unit="[[unit_short_centi_meter]]" precision="0">
        <input>proximityStd</input>
      </value>
    </view>
  </views>
</phyphox>
